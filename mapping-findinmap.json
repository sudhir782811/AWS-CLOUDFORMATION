{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "",
    "Metadata": {},
    "Parameters": {
      "vpccidr": {
          "Description": "choose vpc cidr",
          "Type": "String",
          "Default": "10.20.0.0/16"
      },
      "subnet1cidr": {
          "Description": "choose subnet1 cidr",
          "Type": "String",
          "Default": "10.20.0.0/24"
      },
      "subnet1azs": {
          "Description": "choose subnet1 az",
          "Type": "AWS::EC2::AvailabilityZone::Name"
      },
      "mywebkey": {
          "Description": " choose web server key",
          "Type": "AWS::EC2::KeyPair::KeyName"
      },
      "webinstancetype": {
          "Description": "choose ec2 instance type",
          "Type": "String",
          "Default": "t2.micro",
          "AllowedValues": ["t2.micro", "t2.small"]
        }
    },
    "Mappings": {
      "regionmap": {
                "eu-central-1": {
                  "64": "ami-076431be05aaf8080"
                }
      }
    },
    "Conditions": {},
    "Resources": {
      "myAppvpc": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": { "Ref": "vpccidr" },
          "Tags": [{ "Key": "Name", "Value":  "myvpc" }]
        }
      },
      "subnet1": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": { "Ref": "subnet1azs" },
          "MapPublicIpOnLaunch" : "true",
          "VpcId": { "Ref": "myAppvpc" },
          "CidrBlock": { "Ref": "subnet1cidr" },
          "Tags": [{ "Key": "Name", "Value":  "subnet1" }]
        }
      },
      "myappIGW": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {
          "Tags": [{ "Key": "Name", "Value":  "MyIGW" }]
        }
      },
      "AttachGateway": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "VpcId": { "Ref": "myAppvpc" },
          "InternetGatewayId": { "Ref": "myappIGW" }
        }
      },
      "MYROUTETABLE": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": { "Ref": "myAppvpc" },
          "Tags": [{ "Key": "Name", "Value":  "MYRT" }]
        }
      },
      "RT": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "RouteTableId": { "Ref": "MYROUTETABLE" },
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": { "Ref": "myappIGW" }
        }
      },
      "subnet1association": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": { "Ref": "subnet1" },
          "RouteTableId": { "Ref": "MYROUTETABLE" }
        }
      },
      "WEBSG" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "this is for web server",
          "GroupName" : "WEBSG",
          "SecurityGroupIngress" : [
            {
              "IpProtocol" : "tcp",
              "FromPort" : 80,
              "ToPort" : 80,
              "CidrIp" : "0.0.0.0/0"
            },
            {
              "IpProtocol" : "tcp",
              "FromPort" : 22,
              "ToPort" : 22,
              "CidrIp" : "0.0.0.0/0"
            }

          ],
          "VpcId" : { "Ref": "myAppvpc" },
          "Tags" :  [{ "Key": "Name", "Value":  "WEBSG" }]
        }
      },
      "WEBSERVER": {
          "Type": "AWS::EC2::Instance",
          "Properties": {
              "KeyName": { "Ref": "mywebkey" },
              "ImageId": {
                  "Fn::FindInMap": [
                      "regionmap",
                      { "Ref": "AWS::Region" },
                      "64"
                  ]
                },
              "InstanceType": { "Ref": "webinstancetype" },
              "SubnetId": { "Ref": "subnet1" },
              "Monitoring": "false",
              "SecurityGroupIds" : [{ "Ref": "WEBSG" }],
              "Tags": [
                  {
                      "Key": "Name",
                      "Value": "WEBSERVER"
                  }
              ],
              "UserData": {
                  "Fn::Base64": {
                      "Fn::Join": [
                          "",
                          [
                              "#!/bin/bash -ex \n",
                              "yum install httpd -y \n",
                              "service httpd start \n",
                              "chkconfig httpd on \n"
                          ]
                      ]
                  }
              }
      }
              }
    },
    "Outputs": {}
}
